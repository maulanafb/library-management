{
	"info": {
		"_postman_id": "0b762876-46c7-49f6-b555-1f236a3779e7",
		"name": "Library Management API",
		"description": "This Postman collection contains a set of requests to interact with the Library Management API. The API is built to manage books and categories, allowing users to perform CRUD operations on both entities. Additionally, it supports uploading book cover images.\n\n## Usage\n\n1. Import this collection into your Postman workspace.\n    \n2. Set up environment variables if necessary (e.g., `BASE_URL`).\n    \n3. Start making requests to interact with the API endpoints.\n    \n\n## Included Endpoints\n\n### Books\n\n- **Create a new book**: Endpoint to add a new book to the library.\n    \n- **Get all books**: Endpoint to retrieve all books in the library.\n    \n- **Get a book by ID**: Endpoint to fetch details of a specific book based on its ID.\n    \n- **Update a book**: Endpoint to modify the details of an existing book.\n    \n- **Delete a book**: Endpoint to remove a book from the library.\n    \n\n### Categories\n\n- **Create a new category**: Endpoint to add a new category for books.\n    \n- **Get all categories**: Endpoint to retrieve all available categories.\n    \n\n## Testing\n\nYou can use this collection to test the functionality of the Library Management API. Each request comes with example payloads and responses to guide you through the testing process.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21383181",
		"_collection_link": "https://www.postman.com/maulanafb/workspace/assesment/collection/21383181-0b762876-46c7-49f6-b555-1f236a3779e7?action=share&source=collection_link&creator=21383181"
	},
	"item": [
		{
			"name": "Create a new category",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\":99,\r\n    \"name\": \"Fiction\"}"
				},
				"url": {
					"raw": "http://localhost:5000/api/categories",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all categories",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/categories",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a new book",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\":99,\r\n    \"title\": \"Sample Book\", \"author\": \"Author Name\", \"description\": \"This is a sample book description.\", \"pages\": 300, \"coverImage\": \"image1.jpg\", \"categoryId\": 99}"
				},
				"url": {
					"raw": "http://localhost:5000/api/books",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all books",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/books",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a book by ID",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/books/99",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"books",
						"99"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a book",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"title\": \"Updated Sample Book\", \"author\": \"Author Name\", \"description\": \"This is an updated sample book description.\", \"pages\": 350, \"coverImage\": \"base64EncodedImageString\", \"categoryId\": 99}"
				},
				"url": {
					"raw": "http://localhost:5000/api/books/99",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"books",
						"99"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a book",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/books/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"books",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		}
	]
}